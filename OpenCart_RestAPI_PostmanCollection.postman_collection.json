{
	"info": {
		"_postman_id": "25b904d5-4d17-489d-ad15-873d3103fa6a",
		"name": "OpenCart_RestAPI_PostmanCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40366886"
	},
	"item": [
		{
			"name": "Create Session Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: API session successfully started!\");\r",
							"});\r",
							"pm.collectionVariables.set(\"api_token_val\",jsonData.api_token )"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "demoUser",
							"type": "text"
						},
						{
							"key": "key",
							"value": "bkgsOIY2Hf7QnmctjCHPqebJpizlRdRxSG0g631P3yXs85I2gwyZGSFQyMwmKLc6j6aJkiJnMXFNya5aGB5AlMw57SrPYAk6vMRcNvasHKrv8NodcxOVEOR6zLHv7D4TkXJxyq3GayUrONknqbDwvWsGaIUN2MRKnSivrOkSjuMKLwBfAivt1j7vhFVETmhpYVUtiZuTVKmEDHi0x6NXsb7snRMkTfdcm0v30SteHpIdJjuBVMLQ4M34khkl1Imt",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/login",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Session Currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: Your currency has been changed!\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"currency\",\"GBP\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "currency",
							"value": "{{currency}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/currency",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Product to Cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"product_id\",\"40\");\r",
							"pm.collectionVariables.set(\"quantity\",\"2\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: You have modified your shopping cart!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "product_id",
							"value": "{{product_id}}",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "{{quantity}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/add",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Product Quantity in Cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Checking success msg in response\", function () {\r",
							"    var successMessage = pm.response.json().success;\r",
							"    console.log(\"Success message from response:\", successMessage);\r",
							"    pm.expect(successMessage).to.eql(\"Success: You have modified your shopping cart!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "key",
							"value": "{{cart_id}}",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "5",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/edit",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"edit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate product_id in response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Product ID from response:\", jsonData.products[0].product_id);\r",
							"    pm.expect(jsonData.products).to.be.an('array').that.is.not.empty;\r",
							"    pm.expect(jsonData.products[0].product_id).to.eql(\"40\");\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"cart_id\",jsonData.products[0].cart_id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}api/cart/products",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set  customer for current session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"You have successfully modified customers\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\",\"Dear\");\r",
							"pm.collectionVariables.set(\"lastname\",\"Customer\");\r",
							"pm.collectionVariables.set(\"email\",\"customer@gmail.com\");\r",
							"pm.collectionVariables.set(\"telephone\",\"555-555-555\");\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "firstname",
							"value": "{{firstname}}",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}",
							"type": "text"
						},
						{
							"key": "email",
							"value": "{{email}}",
							"type": "text"
						},
						{
							"key": "telephone",
							"value": "{{telephone}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/customer",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set shipping address for current session",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"address_1\", \"Somewhere\")\r",
							"pm.collectionVariables.set(\"city\", \"KLD\")\r",
							"pm.collectionVariables.set(\"country_id\", \"RUS\")\r",
							"pm.collectionVariables.set(\"zone_id\", \"KGD\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//const responseBody = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: Shipping address has been set!\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "firstname",
							"value": "{{firstname}}",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}",
							"type": "text"
						},
						{
							"key": "address_1",
							"value": "{{address_1}}",
							"type": "text"
						},
						{
							"key": "city",
							"value": "{{city}}",
							"type": "text"
						},
						{
							"key": "country_id",
							"value": "{{country_id}}",
							"type": "text"
						},
						{
							"key": "zone_id",
							"value": "{{zone_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/shipping/address",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"shipping",
						"address"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add new voucher for current session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: You have modified your shopping cart!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "from_name",
							"value": "admin",
							"type": "text"
						},
						{
							"key": "from_email",
							"value": "admin@gmail.com",
							"type": "text"
						},
						{
							"key": "to_name",
							"value": "Dear Customer",
							"type": "text"
						},
						{
							"key": "to_email",
							"value": "customer@gmail.com",
							"type": "text"
						},
						{
							"key": "amount",
							"value": "100",
							"type": "text"
						},
						{
							"key": "code",
							"value": "VOU-7177",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/voucher/add",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"voucher",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set payment address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: Payment address has been set!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "firstname",
							"value": "{{firstname}}",
							"type": "text"
						},
						{
							"key": "lastname",
							"value": "{{lastname}}",
							"type": "text"
						},
						{
							"key": "address_1",
							"value": "{{address_1}}",
							"type": "text"
						},
						{
							"key": "city",
							"value": "{{city}}",
							"type": "text"
						},
						{
							"key": "country_id",
							"value": "{{country_id}}",
							"type": "text"
						},
						{
							"key": "zone_id",
							"value": "{{zone_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/payment/address",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"payment",
						"address"
					]
				}
			},
			"response": []
		},
		{
			"name": "Returning available payment methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let codMethod = response.payment_methods.cod;\r",
							"\r",
							"pm.test(\"'cod' method title is correct\", function () {\r",
							"    console.log(\"COD method title from response:\", codMethod.title);\r",
							"    pm.expect(codMethod.title).to.eql(\"Cash On Delivery\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"payment_method\",\"cod\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}api/payment/methods",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"payment",
						"methods"
					]
				}
			},
			"response": []
		},
		{
			"name": "Setting payment method of available in api/payment/methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success message from response:\", jsonData.success);\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: Payment method has been set!\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"payment_method\", \"cod\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "payment_method",
							"value": "{{payment_method}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/payment/method",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"payment",
						"method"
					]
				}
			},
			"response": []
		},
		{
			"name": "Returning available shipping methods",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"let response = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Quote title is 'Flat Shipping Rate'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Shipping method title from response:\", jsonData.shipping_methods.flat.quote.flat.title);\r",
							"    pm.expect(jsonData.shipping_methods.flat.quote.flat.title).to.eql(\"Flat Shipping Rate\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}api/shipping/methods",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"shipping",
						"methods"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set shipping method for current session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//const responseBody = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Success message is present and correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"success\", \"Success: Shipping method has been set!\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"shipping_method\",\"flat.flat\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "shipping_method",
							"value": "{{shipping_method}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/shipping/method",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"shipping",
						"method"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Add",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"shipping_method\",\"flat.flat\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"if (response.order_id) {\r",
							"    pm.collectionVariables.set(\"order_id\", response.order_id); \r",
							"    console.log(\"Order ID stored in collection variable:\", response.order_id);\r",
							"} else {\r",
							"    console.error(\"Order ID is missing in the response!\");\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains 'success' key\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Success key value from response:\", jsonData.success);\r",
							"    pm.expect(jsonData).to.have.property(\"success\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Success message is correct\", function () {\r",
							"    pm.expect(response.success).to.eql(\"Success: You have modified orders!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains 'order_id' key\", function () {\r",
							"    pm.expect(response).to.have.property(\"order_id\");\r",
							"});\r",
							"\r",
							"console.log(\"Stored Order ID:\", pm.collectionVariables.get(\"order_id\"));\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "shipping_method",
							"value": "{{shipping_method}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/order/add",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"order",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Info",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Success message is correct\", function () {\r",
							"    pm.expect(response.success).to.eql(\"Success: You have modified orders!\");\r",
							"    console.log(\"Success message:\", response.success);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.collectionVariables.unset(\"product_id\");\r",
							"pm.collectionVariables.unset(\"quantity\");\r",
							"pm.collectionVariables.unset(\"cart_id\");\r",
							"pm.collectionVariables.unset(\"quantity\");\r",
							"pm.collectionVariables.unset(\"api_token_val\");\r",
							"pm.collectionVariables.unset(\"currency\");\r",
							"pm.collectionVariables.unset(\"lastname\");\r",
							"pm.collectionVariables.unset(\"firstname\");\r",
							"pm.collectionVariables.unset(\"email\");\r",
							"pm.collectionVariables.unset(\"telephone\");\r",
							"pm.collectionVariables.unset(\"address_1\");\r",
							"pm.collectionVariables.unset(\"city\");\r",
							"pm.collectionVariables.unset(\"country_id\");\r",
							"pm.collectionVariables.unset(\"zone_id\");\r",
							"pm.collectionVariables.unset(\"order_id\");\r",
							"pm.collectionVariables.unset(\"shipping_method\");\r",
							"pm.collectionVariables.unset(\"payment_method\");\r",
							"pm.collectionVariables.unset(\"shipping_method\");\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "order_id",
							"value": "{{order_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/order/info&order_id={{order_id}}",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"order",
						"info&order_id={{order_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ip",
			"value": "192.168.53.137",
			"type": "string"
		},
		{
			"key": "baseURL",
			"value": "http://{{ip}}/opencart/upload/index.php?route=",
			"type": "string"
		}
	]
}